name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Runs only on the master branch push

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Verify Docker Login
        run: docker info

      - name: Detect Changed Services
        id: changed-services
        run: |
          echo "Checking for changes..."
          git fetch --unshallow || true
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Files changed: $CHANGED_FILES"

          CHANGED_SERVICES=""

          if echo "$CHANGED_FILES" | grep -q "distributed-quiz-service/question-app/"; then
            CHANGED_SERVICES="$CHANGED_SERVICES question-app"
          fi
          if echo "$CHANGED_FILES" | grep -q "distributed-quiz-service/submit-app/"; then
            CHANGED_SERVICES="$CHANGED_SERVICES submit-app"
          fi
          if echo "$CHANGED_FILES" | grep -q "distributed-quiz-service/db/"; then
            CHANGED_SERVICES="$CHANGED_SERVICES db"
          fi
          if echo "$CHANGED_FILES" | grep -q "distributed-quiz-service/etl/"; then
            CHANGED_SERVICES="$CHANGED_SERVICES etl"
          fi

          echo "Detected Changes: $CHANGED_SERVICES"
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Build and Push Question App (if changed)
        if: contains(env.CHANGED_SERVICES, 'question-app')
        run: |
          echo "Building and pushing Question App..."
          docker build -t harshanasenadeera/question-app:latest ./distributed-quiz-service/question-app
          docker push harshanasenadeera/question-app:latest

      - name: Build and Push Submit App (if changed)
        if: contains(env.CHANGED_SERVICES, 'submit-app')
        run: |
          echo "Building and pushing Submit App..."
          docker build -t harshanasenadeera/submit-app:latest ./distributed-quiz-service/submit-app
          docker push harshanasenadeera/submit-app:latest

      - name: Build and Push Database (if changed)
        if: contains(env.CHANGED_SERVICES, 'db')
        run: |
          echo "Building and pushing Database..."
          docker build -t harshanasenadeera/db:latest ./distributed-quiz-service/db
          docker push harshanasenadeera/db:latest

  elt-pipeline:
    name: ELT Pipeline Execution
    needs: build-and-push
    runs-on: ubuntu-latest
    if: contains(env.CHANGED_SERVICES, 'etl')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install ELT Dependencies
        run: |
          pip install pandas sqlalchemy psycopg2-binary

      - name: Extract Data from Database
        run: |
          python distributed-quiz-service/etl/extract_data.py

      - name: Load Data into Data Warehouse
        run: |
          python distributed-quiz-service/etl/load_data.py

      - name: Transform Data for Analysis
        run: |
          python distributed-quiz-service/etl/transform_data.py

      - name: Verify ELT Completion
        run: echo "ELT Pipeline completed successfully!"
